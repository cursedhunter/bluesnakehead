---
pod_name: DC1_POD1

# I take this to mean per leaf spine..
# We are doing 2x100 each leaf to each spine
max_l3leaf_to_spine_links: 4
# this mgmt info can't be nested under node types.
mgmt_gateway: 10.6.1.1
mgmt_interface: Management0
mgmt_interface_vrf: mgmt
mgmt_destination_networks:
  - 0.0.0.0/0
  
spine:
  defaults:
    platform: vEOS-LAB
    bgp_as: "65001.100"
    loopback_ipv4_pool: 10.4.28.0/24
    #Spines use this to source their uplinks to SS, in order. # should match # of SS's
    uplink_interfaces: ['Ethernet29/1', 'Ethernet30/1', 'Ethernet31/1', 'Ethernet32/1' ]
    uplink_switches: ['SUPER-SPINE1', 'SUPER-SPINE2', 'SUPER-SPINE3', 'SUPER-SPINE4'] 
    #USI maps to the SS listed above. S-to SSP from eth1 to eth17/1, 
    #Can't really use this, because every spine will try to map to SS's in the same order. 
    #It will overwrite the previous, so last in wins
#    uplink_switch_interfaces: ['Ethernet17/1', 'Ethernet17/2', 'Ethernet17/3', 'Ethernet17/4', 'Ethernet18/1', 'Ethernet18/2', 'Ethernet18/3', 'Ethernet18/4', 'Ethernet19/1', 'Ethernet19/2', 'Ethernet19/3', 'Ethernet19/4', 'Ethernet20/1', 'Ethernet20/2', 'Ethernet20/3', 'Ethernet20/4',]
    #Is this uplink spine-superspine?
    max_uplink_switches: 32
    #this is uplink to supers. Supers are even, starting at zero
    uplink_ipv4_pool: 172.16.1.0/24
    uplink_ptp:
      enable: True
    bgp_defaults:
      - 'no bgp default ipv4-unicast'
      - 'distance bgp 20 200 200'
      - 'graceful-restart restart-time 300'
      - 'graceful-restart'
  nodes:
    DC1-POD1-SPINE1:
      id: 1
      mgmt_ip: "{{ ansible_host }}/24"
      evpn_role: none
      #This switch used local 1/1 to 4/1, and mapped each one to 1/1 on the SS
      uplink_switch_interfaces: ['Ethernet1/1', 'Ethernet1/1', 'Ethernet1/1', 'Ethernet1/1']
      #evpn_route_servers: [ DC2-SUPER-SPINE1, DC2-POD1-SPINE1, DC2-POD1-LEAF1A ]
    DC1-POD1-SPINE2:
      id: 2
      bgp_as: "65001.102"
      evpn_role: none
      mgmt_ip: "{{ ansible_host }}/24"
      #This switch used local 1/1 to 4/1, and mapped each one to 2/1 on the SS
      uplink_switch_interfaces: ['Ethernet2/1', 'Ethernet2/1', 'Ethernet2/1', 'Ethernet2/1']
    DC1-POD1-SPINE3:
      id: 3
      mgmt_ip: "{{ ansible_host }}/24"
      evpn_role: none
      uplink_switch_interfaces: ['Ethernet3/1', 'Ethernet3/1', 'Ethernet3/1', 'Ethernet3/1']      
    DC1-POD1-SPINE4:
      id: 4
      mgmt_ip: "{{ ansible_host }}/24"
      evpn_role: none
      uplink_switch_interfaces: ['Ethernet4/1', 'Ethernet4/1', 'Ethernet4/1', 'Ethernet4/1']      
# In DC1 we define all variables on specific node / node_group
l3leaf:
  defaults:
    bgp_as: "65555"
    virtual_router_mac_address: 00:1c:73:00:dc:01
    platform: 7280R
    evpn_role: server
#client    neighbor EVPN-OVERLAY-PEERS next-hop-unchanged
#server    neighbor EVPN-OVERLAY-PEERS default-route-target only
#    evpn_route_servers: [ DC1-POD1-LEAF1A, DC1-POD1-LEAF1B ]
    igmp_snooping_enabled: true
    spanning_tree_mode: rstp
    spanning_tree_priority: 4096
    loopback_ipv4_pool: 10.4.1.0/24
    # offset takes the "id:' and adds the offset
    loopback_ipv4_offset: 2
    vtep_loopback_ipv4_pool: 10.5.1.0/24
    uplink_ipv4_pool: 172.17.1.0/24
    uplink_ptp:
      enable: True
    #Leafs use this to source their uplinks to Spines, in order. # should match # of S's
    uplink_interfaces: ['Ethernet29/1', 'Ethernet30/1', 'Ethernet31/1', 'Ethernet32/1' ]
    uplink_switches: ['DC1-POD1-SPINE1', 'DC1-POD1-SPINE2', 'DC1-POD1-SPINE3', 'DC1-POD1-SPINE4']
    bgp_defaults:
      - 'no bgp default ipv4-unicast'
      - 'distance bgp 20 200 200'
      - 'graceful-restart restart-time 300'
      - 'graceful-restart'
# filter matches tags specified in TENANT_NETWORKS.yml. This is where we associate vrfs/racks. Vlans in servers would match specific nodes. I'll have to check 'tag' capabilites there
    filter:
      always_include_vrfs_in_tenants: [ 'all' ] #Testing that we configure all VRFs even with no VLANs.
      tags: [ 'all' ]
#      tags: [ Cust_A_opzone ]      
    mlag: true
    mlag_interfaces: [ Ethernet15/1, Ethernet16/1 ]    
    mlag_peer_l3_ipv4_pool: 172.19.1.0/24
    mlag_peer_ipv4_pool: 172.20.1.0/24
  node_groups:
    # Single switch working as underlay L3 router and EVPN RS
#    RACK1_SINGLE:
#      platform: vEOS-LAB
#      #Moved to defaults
#      #uplink_interfaces: ['Ethernet1', 'Ethernet2']
#      #uplink_switches: ['DC1-POD1-SPINE1', 'DC1-POD1-SPINE2']
#      spanning_tree_mode: none
#      bgp_as: "65111.100"
#      mlag: false
#      evpn_role: server
#      #let's figure out what this line means
#      evpn_route_servers: [ DC2-SUPER-SPINE1, DC2-POD1-SPINE1, DC2-POD1-LEAF1A ]
#      filter:
#        tenants: []
#        tags: []
#        always_include_vrfs_in_tenants: [ 'all' ] #Testing that we respect the empty tenants list, so no VRFs will be configured.
      # Below will not have any effect since it is overridden on the node level. So just a negative test.
#      raw_eos_cli: |
#        interface Loopback1001
#          description Loopback created from raw_eos_cli under node-group RACK1_SINGLE
#      nodes:
#        DC1-POD1-LEAF1A:
#          id: 1
#          # mgmt_ip: 192.168.1.7/24 Test without management IP
#          # Doesn't seem to be picking up defaults. Wait... this isn't a default. uplink_switch, uplink_interfaces.. but what is this?L2?
#          uplink_switch_interfaces: ['Ethernet3', 'Ethernet3']
#          raw_eos_cli: |
#            interface Loopback1002
#              description Loopback created from raw_eos_cli under node DC1-POD1-LEAF1A
    RACK1_MLAG:
      platform: vEOS-LAB
      #Moved to defaults
#      uplink_interfaces: ['Ethernet1', 'Ethernet2']
#      uplink_switches: ['DC1-POD1-SPINE1', 'DC1-POD1-SPINE2']
#      spanning_tree_mode: none
      bgp_as: "65111.100"
      mlag: true
#      mlag_interfaces: [ Ethernet15/1, Ethernet16/1 ]
      mlag_dual_primary_detection: true
      mlag_peer_l3_vlan: 4094 #Using 4094 for both mlag peer and l3 peerings.
      #evpn_role: server
      #let's figure out what this line means. If I'm a server, do I have spec this?
#      evpn_route_servers: [ DC1-POD1-LEAF1A, DC1-POD1-LEA1B ]
      filter:
        tenants: []
        tags: []
        always_include_vrfs_in_tenants: [ 'all' ] #Testing that we respect the empty tenants list, so no VRFs will be configured.
      # Below will not have any effect since it is overridden on the node level. So just a negative test.
#      raw_eos_cli: |
#        interface Loopback1001
#          description Loopback created from raw_eos_cli under node-group RACK1_SINGLE
      nodes:
        DC1-POD1-LEAF1A:
          id: 5
          mgmt_ip: "{{ ansible_host }}/24"
          # Doesn't seem to be picking up defaults. Wait... this isn't a default. uplink_switch, uplink_interfaces.. but what is this?L2?
          # If like the ss/s, this has to be unique
          uplink_switch_interfaces: [ Ethernet1/1, Ethernet1/1, Ethernet1/1, Ethernet1/1 ]
        DC1-POD1-LEAF1B:
          id: 6
          mgmt_ip: "{{ ansible_host }}/24"
          # mgmt_ip: 192.168.1.8/24          
          uplink_switch_interfaces: [ Ethernet2/1, Ethernet2/1, Ethernet2/1, Ethernet2/1 ]
                    
    # Regular MLAG pair
    RACK2_MLAG:
      platform: vEOS-LAB
      bgp_as: "65111.200"
      #evpn_role: server
#      evpn_route_servers: [ DC1-POD1-LEAF1A, DC1-POD1-LEAF1B ]
      mlag: true
      mlag_dual_primary_detection: true
      mlag_peer_l3_vlan: 4094 #Using 4094 for both mlag peer and l3 peerings.
      nodes:
        DC1-POD1-LEAF2A:
          structured_config:
            domain_list:
              - structured-config.set.on.node
          id: 7
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet3/1, Ethernet3/1, Ethernet3/1, Ethernet3/1 ]
        DC1-POD1-LEAF2B:
          id: 8
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet4/1, Ethernet4/1, Ethernet4/1, Ethernet4/1 ]

# Trying defaults
    # Regular MLAG pair
    RACK3_MLAG:
      platform: vEOS-LAB
      # uplink_switches: [ DC1-POD1-SPINE1, DC1-POD1-SPINE2, DC1-POD1-SPINE1, DC1-POD1-SPINE2 ]
      bgp_as: "65111.300"
#      evpn_route_servers: [ DC1-POD1-LEAF1A, DC1-POD1-LEAF1B ]
      mlag: true
      #mlag_interfaces: [ Ethernet5, Ethernet6 ]
      mlag_dual_primary_detection: true
      mlag_peer_l3_vlan: 4094 #Using 4094 for both mlag peer and l3 peerings.
#      spanning_tree_mode: mstp
#      spanning_tree_priority: 4096
      nodes:
        DC1-POD1-LEAF3A:
#          structured_config:
#            domain_list:
#              - structured-config.set.on.node
          id: 9
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet5/1, Ethernet5/1, Ethernet5/1, Ethernet5/1 ]
        DC1-POD1-LEAF3B:
          id: 10
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet6/1, Ethernet6/1, Ethernet6/1, Ethernet6/1 ]
    RACK4_MLAG:
      platform: vEOS-LAB
      # uplink_switches: [ DC1-POD1-SPINE1, DC1-POD1-SPINE2, DC1-POD1-SPINE1, DC1-POD1-SPINE2 ]
      bgp_as: "65111.400"
#      evpn_route_servers: [ DC1-POD1-LEAF1A, DC1-POD1-LEAF1B ]
      #mlag_interfaces: [ Ethernet5, Ethernet6 ]
      mlag_dual_primary_detection: true
      mlag_peer_l3_vlan: 4094 #Using 4094 for both mlag peer and l3 peerings.
#      spanning_tree_mode: mstp
#      spanning_tree_priority: 4096
      nodes:
        DC1-POD1-LEAF4A:
#          structured_config:
#            domain_list:
#              - structured-config.set.on.node
          id: 11
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet7/1, Ethernet7/1, Ethernet7/1, Ethernet7/1 ]
        DC1-POD1-LEAF4B:
          id: 12
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet8/1, Ethernet8/1, Ethernet8/1, Ethernet8/1 ]
    RACK5_MLAG:
      platform: vEOS-LAB
      bgp_as: "65111.500"
#      evpn_route_servers: [ DC1-POD1-LEAF1A, DC1-POD1-LEAF1B ]
      #mlag_interfaces: [ Ethernet5, Ethernet6 ]
      mlag_dual_primary_detection: true
      mlag_peer_l3_vlan: 4094 #Using 4094 for both mlag peer and l3 peerings.
      nodes:
        DC1-POD1-LEAF5A:
          id: 13
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet9/1, Ethernet9/1, Ethernet9/1, Ethernet9/1 ]
        DC1-POD1-LEAF5B:
          id: 14
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet10/1, Ethernet10/1, Ethernet10/1, Ethernet10/1 ]
    RACK6_MLAG:
      bgp_as: "65111.600"
      mlag: true
      #mlag_interfaces: [ Ethernet5, Ethernet6 ]
      mlag_dual_primary_detection: true
      mlag_peer_l3_vlan: 4094 #Using 4094 for both mlag peer and l3 peerings.
      nodes:
        DC1-POD1-LEAF6A:
          id: 15
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet11/1, Ethernet11/1, Ethernet11/1, Ethernet11/1 ]
        DC1-POD1-LEAF6B:
          id: 16
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet12/1, Ethernet12/1, Ethernet12/1, Ethernet12/1 ]
    RACK7_MLAG:
      bgp_as: "65111.700"
      mlag: true
      #mlag_interfaces: [ Ethernet5, Ethernet6 ]
      mlag_dual_primary_detection: true
      mlag_peer_l3_vlan: 4094 #Using 4094 for both mlag peer and l3 peerings.
      nodes:
        DC1-POD1-LEAF7A:
          id: 17
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet13/1, Ethernet13/1, Ethernet13/1, Ethernet13/1 ]
        DC1-POD1-LEAF7B:
          id: 18
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet14/1, Ethernet14/1, Ethernet14/1, Ethernet14/1 ]
    RACK8_MLAG:
      bgp_as: "65111.800"
      mlag: true
      #mlag_interfaces: [ Ethernet5, Ethernet6 ]
      mlag_dual_primary_detection: true
      mlag_peer_l3_vlan: 4094 #Using 4094 for both mlag peer and l3 peerings.
      nodes:
        DC1-POD1-LEAF8A:
          id: 19
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet15/1, Ethernet15/1, Ethernet15/1, Ethernet15/1 ]
        DC1-POD1-LEAF8B:
          id: 20
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet16/1, Ethernet16/1, Ethernet16/1, Ethernet16/1 ]
    RACK9_MLAG:
      bgp_as: "65111.900"
      mlag: true
      #mlag_interfaces: [ Ethernet5, Ethernet6 ]
      mlag_dual_primary_detection: true
      mlag_peer_l3_vlan: 4094 #Using 4094 for both mlag peer and l3 peerings.
      nodes:
        DC1-POD1-LEAF9A:
          id: 21
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet17/1, Ethernet17/1, Ethernet17/1, Ethernet17/1 ]
        DC1-POD1-LEAF9B:
          id: 22
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet18/1, Ethernet18/1, Ethernet18/1, Ethernet18/1 ]
    RACK10_MLAG:
      bgp_as: "65111.1000"
      mlag: true
      #mlag_interfaces: [ Ethernet5, Ethernet6 ]
      mlag_dual_primary_detection: true
      mlag_peer_l3_vlan: 4094 #Using 4094 for both mlag peer and l3 peerings.
      nodes:
        DC1-POD1-LEAF10A:
          id: 23
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet19/1, Ethernet19/1, Ethernet19/1, Ethernet19/1 ]
        DC1-POD1-LEAF10B:
          id: 24
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet20/1, Ethernet20/1, Ethernet20/1, Ethernet20/1 ]
    RACK11_MLAG:
      bgp_as: "65111.1100"
      mlag: true
      #mlag_interfaces: [ Ethernet5, Ethernet6 ]
      mlag_dual_primary_detection: true
      mlag_peer_l3_vlan: 4094 #Using 4094 for both mlag peer and l3 peerings.
      nodes:
        DC1-POD1-LEAF11A:
          id: 25
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet21/1, Ethernet21/1, Ethernet21/1, Ethernet21/1 ]
        DC1-POD1-LEAF11B:
          id: 26
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet22/1, Ethernet22/1, Ethernet22/1, Ethernet22/1 ]
    RACK12_MLAG:
      bgp_as: "65111.1200"
      mlag: true
      #mlag_interfaces: [ Ethernet5, Ethernet6 ]
      mlag_dual_primary_detection: true
      mlag_peer_l3_vlan: 4094 #Using 4094 for both mlag peer and l3 peerings.
      nodes:
        DC1-POD1-LEAF12A:
          id: 27
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet23/1, Ethernet23/1, Ethernet23/1, Ethernet23/1 ]
        DC1-POD1-LEAF12B:
          id: 28
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet24/1, Ethernet24/1, Ethernet24/1, Ethernet24/1 ]
    RACK13_MLAG:
      bgp_as: "65111.1300"
      mlag: true
      #mlag_interfaces: [ Ethernet5, Ethernet6 ]
      mlag_dual_primary_detection: true
      mlag_peer_l3_vlan: 4094 #Using 4094 for both mlag peer and l3 peerings.
      nodes:
        DC1-POD1-LEAF13A:
          id: 29
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet25/1, Ethernet25/1, Ethernet25/1, Ethernet25/1 ]
        DC1-POD1-LEAF13B:
          id: 30
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet26/1, Ethernet26/1, Ethernet26/1, Ethernet26/1 ]
    RACK14_MLAG:
      bgp_as: "65111.1400"
      mlag: true
      #mlag_interfaces: [ Ethernet5, Ethernet6 ]
      mlag_dual_primary_detection: true
      mlag_peer_l3_vlan: 4094 #Using 4094 for both mlag peer and l3 peerings.
      nodes:
        DC1-POD1-LEAF14A:
          id: 31
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet27/1, Ethernet27/1, Ethernet27/1, Ethernet27/1 ]
        DC1-POD1-LEAF14B:
          id: 32
          mgmt_ip: "{{ ansible_host }}/24"
          uplink_switch_interfaces: [ Ethernet28/1, Ethernet28/1, Ethernet28/1, Ethernet28/1 ]

# In DC1 we define all variables on specific node / node_group
#l2leaf:
#  defaults:
#    inband_management_subnet: 172.21.110.0/24
#    inband_management_vlan: 4085
#    mlag_peer_l3_ipv4_pool: 172.19.110.0/24
 #   mlag_peer_ipv4_pool: 172.20.110.0/24
 # node_groups:
 #   RACK2_SINGLE:
 #     platform: vEOS-LAB
  #    uplink_switches: ['DC1-POD1-LEAF1A']
   #   uplink_interfaces: [ Ethernet1 ]
   #   spanning_tree_mode: mstp
   #   spanning_tree_priority: 8192
   #   mlag: false
   #   nodes:
   #     DC1-POD1-L2LEAF1A:
   #       id: 1
   #       # mgmt_ip: 192.168.1.10/24 Test without management IP
   #       uplink_switch_interfaces: ['Ethernet3']
#    RACK2_MLAG:
#      platform: vEOS-LAB
#      uplink_switches: ['DC1-POD1-LEAF2A', 'DC1-POD1-LEAF2B']
#      uplink_interfaces: [ Ethernet1, Ethernet2 ]
#      mlag_interfaces: [ Ethernet3, Ethernet4 ]
#      spanning_tree_mode: mstp
#      spanning_tree_priority: 8192
#      raw_eos_cli: |
#        interface Loopback1002
#          description Loopback created from raw_eos_cli under l2leaf node-group RACK2_MLAG
#      nodes:
#        DC1-POD1-L2LEAF2A:
#          id: 2
#          # mgmt_ip: 192.168.1.11/24 Test without management IP
#          uplink_switch_interfaces: ['Ethernet3', 'Ethernet3']
#        DC1-POD1-L2LEAF2B:
#          id: 3
#          mgmt_ip: 192.168.1.12/24
#          uplink_switch_interfaces: ['Ethernet4', 'Ethernet4']
#          raw_eos_cli: |
#            interface Loopback1003
#              description Loopback created from raw_eos_cli under l2leaf node DC1-POD1-L2LEAF2#B
